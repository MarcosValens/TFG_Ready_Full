version: "3"
services:
    backend:
        container_name: portscanner-backend
        restart: on-failure
        image: tfgportscanner/portscanner-backend:latest
        ports:
            - "8000:8000"
        environment:
            - PORT=${PORT}
            - WHITELIST=${WHITELIST}
            - SECRET=${SECRET}
            - REFRESH_SECRET=${REFRESH_SECRET}
            - SALT_ROUNDS=${SALT_ROUNDS}
            - GOOGLE_CLIENT_ID=${GOOGLE_CLIENT_ID}
            - GOOGLE_CLIENT_SECRET=${GOOGLE_CLIENT_SECRET}
            - MONGO_USER=${MONGO_USER}
            - MONGO_PASSWORD=${MONGO_PASSWORD}
            - MODE=production
            - NODE_ENV=production
    mongo:
        container_name: mongo
        image: mongo
        volumes:
            - $PWD/mongo:/data/db
        ports:
            - "27017:27017"
        environment:
            - MONGO_INITDB_ROOT_USERNAME=${MONGO_USER}
            - MONGO_INITDB_ROOT_PASSWORD=${MONGO_PASSWORD}
            - MONGO_INITDB_DATABASE=portscanner
    frontend:
        container_name: portscanner-frontend
        image: tfgportscanner/portscanner-frontend:latest
        volumes:
            - ./env/.env:/app/.env
            - pages:/app/html:rw
        #entrypoint: quasar build; cp -r /app/dist/spa/* /app/html
        entrypoint: sh self-install.sh
    nginx:
        container_name: nginx
        image: nginx:alpine
        ports:
            - "8001:80"
        volumes:
            - pages:/usr/share/nginx/html
volumes:
    pages:

